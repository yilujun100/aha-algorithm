/**
 * 队列入门：解密QQ号
 * QQ: 631758924 -> 615947283
 * 解密规则：首先将第1个数删除，紧接着将第2个数放到这串数的末尾，再将第3个数删除并将第4个数放到这串数的末尾，再将第5个数删除...直到剩下最后一个数，将最后一个数也删除。
 * 按照刚才删除的顺序，把这些删除的数连在一起就是解密后的QQ号
 *
 * 队列概念：
 * 队列是一种特殊的线性结构，它只允许在队列的首部（head）进行删除操作，这称为"出队"，而在队列的尾部（tail）进行插入操作，这称为"入队"。当队列中没有元素时（即head==tail），称为空队列。
 * 在我们的日常生活中有很多情况都符合队列的特性。比如买票，每个排队买票的窗口就是一个队列。在这个队列当中，新来的人总是站在队列的最后面，来的越早的人越靠前，也就越早能买到票，就是先来的人先服务，
 * 我们称为"先进先出"(First In First Out, FIFO)原则
 */

function decryptQQ(qqNumber) {
    const result = []
    let q = qqNumber.toString().split(''), head, tail
    let i
    // 初始化队列
    head = 0
    tail = q.length // 队列中已经有9个元素了,tail指向队尾的后一个位置(为什么tail不直接记录队尾，却要记录队尾的下一个位置呢？这是因为当队列中只剩下一个元素时，队首和队尾重合会带来一些麻烦)
    while (head < tail) { // 当队列不为空的时候执行循环
        // 将队首出队
        result.push(q[head])
        head++
        // 先将新队首的数添加到队尾
        q[tail] = q[head]
        tail++
        // 再将队首出队
        head++
    }
    return result.join('')
}

console.log(decryptQQ('631758924'))